# .github/workflows/build-and-publish.yml
name: build & publish (bake)

on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write   # needed to push to GHCR

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      COMMIT_SHA: ${{ github.sha }}
      IS_MAIN: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          install: true

      # Login only when pushing to GHCR (main)
      - name: Login to GHCR
        if: env.IS_MAIN == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ---------- PRs: build & artifact (.tar) ----------
      - name: Bake (build into local Docker)
        if: env.IS_MAIN != 'true'
        uses: docker/bake-action@v5
        with:
          files: docker-compose.yml
          set: |
            *.output=type=docker

      - name: Export images as .tar
        if: env.IS_MAIN != 'true'
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p image-artifacts
          targets=$(docker buildx bake --print -f docker-compose.yml | jq -r '.target | keys[]')
          for t in $targets; do
            # Expect images tagged like ghcr.io/dankeg/kestrelai-<service>:commit-<sha>
            tag="ghcr.io/dankeg/kestrelai-${t}:commit-${COMMIT_SHA}"
            # Fallback to service:latest if not found
            if ! docker image inspect "$tag" >/dev/null 2>&1; then
              tag="${t}:latest"
            fi
            out="image-artifacts/${t}.tar"
            echo "Saving $tag -> $out"
            docker save -o "$out" "$tag"
          done
          ls -lh image-artifacts

      - name: Upload artifacts
        if: env.IS_MAIN != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: docker-images-${{ github.run_id }}
          path: image-artifacts/
          compression-level: 0

      # ---------- main: push to GHCR ----------
      - name: Bake (push to GHCR)
        if: env.IS_MAIN == 'true'
        uses: docker/bake-action@v5
        with:
          files: docker-compose.yml
          set: |
            *.push=true
            *.no-cache=true
