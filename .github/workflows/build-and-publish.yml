name: build & publish (bake)

on:
  pull_request:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      COMMIT_SHA: ${{ github.sha }}
      IS_MAIN: ${{ github.ref == 'refs/heads/main' }}

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Free disk space
        run: |
          echo "Disk usage before cleanup:"
          df -h
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/lib/android /opt/hostedtoolcache
          echo "Disk usage after cleanup:"
          df -h

      - name: Login to GHCR
        if: env.IS_MAIN == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ---------- PRs: export as tar artifacts ----------
      - name: Build and export images (PR)
        if: env.IS_MAIN != 'true'
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p image-artifacts

          # Enumerate bake targets
          targets=$(docker buildx bake --print -f docker-compose.yml | jq -r '.target | keys[]')

          for t in $targets; do
            echo "==> Building and exporting $t"
            out="image-artifacts/${t}.tar"
            docker buildx bake -f docker-compose.yml "$t" \
              --set "$t.output=type=oci,dest=${out}" \
              --set "$t.tags=ghcr.io/dankeg/kestrelai-${t}:commit-${COMMIT_SHA}" \
              --set "$t.no-cache=true"

            echo "==> Built $t ($(du -h ${out}))"
            docker buildx prune -af --keep-storage 512000 || true
          done

          echo "Final disk usage:"
          df -h

      - name: Upload artifacts
        if: env.IS_MAIN != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: docker-images-${{ github.run_id }}
          path: image-artifacts/
          compression-level: 9

      # ---------- main: push to GHCR sequentially ----------
      - name: Build & push images sequentially (main)
        if: env.IS_MAIN == 'true'
        shell: bash
        run: |
          set -euo pipefail

          targets=$(docker buildx bake --print -f docker-compose.yml | jq -r '.target | keys[]')

          for t in $targets; do
            echo "==> Building & pushing $t"
            docker buildx bake -f docker-compose.yml "$t" \
              --set "$t.push=true" \
              --set "$t.no-cache=true"

            echo "==> Cleaning up $t to free disk"
            docker buildx prune -af --volumes || true
            echo "==> Done with $t"
          done

          echo "Final disk usage:"
          df -h
